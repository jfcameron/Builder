cmake_minimum_required (VERSION 3.1)
cmake_policy(SET CMP0037 NEW)

include("lib/JSONParser.cmake")
include("lib/sourcegroupassigner.cmake")

file(STRINGS ./config.json config)
sbeParseJson(example config)

# Now you can use parsed variables.
foreach(var ${example})
    message("${var} = ${${var}}")
endforeach()

#return()

#Set consts
set(SOURCE_ROOT "../src")
set(ProjectName "GDK")

#Collect, sort and print common files
file(GLOB_RECURSE COMMON_SOURCE_FILES
    "${SOURCE_ROOT}/common/*.cpp"
    "${SOURCE_ROOT}/common/*.h"
)

message("Common files:")
foreach(file_path ${COMMON_SOURCE_FILES})
    message(${file_path})
endforeach()
assign_source_group(${COMMON_SOURCE_FILES})

#Collect, sort and print platform files
if (NOT ${PLATFORM} STREQUAL "")
    file(GLOB_RECURSE PLATFORM_SPECIFIC_SOURCE_FILES
        "${SOURCE_ROOT}/${PLATFORM}/*.cpp"
        "${SOURCE_ROOT}/${PLATFORM}/*.h"
    )
    message("${PLATFORM} specific files:")
    foreach(file_path ${PLATFORM_SPECIFIC_SOURCE_FILES})
        message(${file_path})
    endforeach()
    assign_source_group(${PLATFORM_SPECIFIC_SOURCE_FILES})
endif()

#Build the project
project ("${ProjectName}")
add_executable("${ProjectName}" ${COMMON_SOURCE_FILES} ${PLATFORM_SPECIFIC_SOURCE_FILES})